name: CI

on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    branches:
      - master
      - release-*

jobs:
  infra:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/playwright-github-action@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
    - name: Build package
      run: python setup.py bdist_wheel
    - name: Install browsers
      run: python -m playwright install
    - name: Lint
      run: pre-commit run --all-files
    - name: Generate APIs
      run: bash scripts/update_api.sh
    - name: Verify API is up to date
      run: |
        if [[ -n $(git status -s) ]]; then
          echo "ERROR: generated code differ from the current sources:"
          git diff
          exit 1
        fi
  build:
    name: Build
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8]
        browser: [chromium, firefox, webkit]
        include:
        - os: ubuntu-latest
          python-version: 3.9
          browser: chromium
        - os: windows-latest
          python-version: 3.9
          browser: chromium
        - os: macos-latest
          python-version: 3.9
          browser: chromium
        - os: macos-11.0
          python-version: 3.9
          browser: chromium
        - os: macos-11.0
          python-version: 3.9
          browser: firefox
        - os: macos-11.0
          python-version: 3.9
          browser: webkit
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/playwright-github-action@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r local-requirements.txt
        pip install -e .
    - name: Build package
      run: python setup.py bdist_wheel
    - name: Install browsers
      run: python -m playwright install
    - name: Common Tests
      run: pytest -vv tests/common --browser=${{ matrix.browser }} --timeout 90
    - name: Test Sync API
      if: matrix.os != 'ubuntu-latest'
      run: pytest -vv tests/sync --browser=${{ matrix.browser }} --timeout 90
    - name: Test Sync API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest -vv tests/sync --browser=${{ matrix.browser }} --timeout 90
    - name: Test Async API
      if: matrix.os != 'ubuntu-latest'
      run: pytest -vv tests/async --browser=${{ matrix.browser }} --timeout 90
    - name: Test Async API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest -vv tests/async --browser=${{ matrix.browser }} --timeout 90

  test-package-installations:
    name: Test package installations
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/playwright-github-action@v1
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
    - name: Build package
      run: python setup.py bdist_wheel
    - name: Test package installation
      run: bash buildbots/test-package-installations.sh
