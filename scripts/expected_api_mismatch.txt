# Missing methods
Method not implemented: Browser.newBrowserCDPSession
Method not implemented: Browser.startTracing
Method not implemented: Browser.stopTracing
Method not implemented: BrowserContext.backgroundPages
Method not implemented: BrowserContext.newCDPSession
Method not implemented: BrowserContext.serviceWorkers
Method not implemented: BrowserContext.setHTTPCredentials
Method not implemented: BrowserServer.close
Method not implemented: BrowserServer.kill
Method not implemented: BrowserServer.process
Method not implemented: BrowserServer.wsEndpoint
Method not implemented: BrowserType.launchServer
Method not implemented: Coverage.startCSSCoverage
Method not implemented: Coverage.startJSCoverage
Method not implemented: Coverage.stopCSSCoverage
Method not implemented: Coverage.stopJSCoverage
Method not implemented: Download.createReadStream
Method not implemented: Logger.isEnabled
Method not implemented: Logger.log
Method not implemented: Page.coverage

# Parameter overloads
Parameter not documented: BrowserContext.waitForEvent(predicate=)
Parameter not documented: BrowserContext.waitForEvent(timeout=)
Parameter not documented: Page.waitForEvent(predicate=)
Parameter not documented: Page.waitForEvent(timeout=)
Parameter not documented: Page.waitForRequest(predicate=)
Parameter not documented: Page.waitForResponse(predicate=)
Parameter not documented: Selectors.register(path=)
Parameter not documented: WebSocket.waitForEvent(timeout=)
Parameter not documented: WebSocket.waitForEvent(predicate=)

# Viewport size
Parameter type mismatch in Browser.newPage(viewport=): documented as Optional[Dict], code has Union[typing.Tuple[int, int], '0', NoneType]
Parameter type mismatch in Browser.newContext(viewport=): documented as Optional[Dict], code has Union[typing.Tuple[int, int], '0', NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(viewport=): documented as Optional[Dict], code has Union[typing.Tuple[int, int], '0', NoneType]
Parameter type mismatch in Page.viewportSize(return=): documented as Optional[Dict], code has Optional[typing.Tuple[int, int]]

# Documented as Dict / Any
Parameter type mismatch in BrowserContext.waitForEvent(return=): documented as Dict, code has Any
Parameter type mismatch in ElementHandle.boundingBox(return=): documented as Optional[Dict], code has Optional[{"x": float, "y": float, "width": float, "height": float}]
Parameter type mismatch in Page.waitForEvent(return=): documented as Dict, code has Any
Parameter type mismatch in Request.failure(return=): documented as Optional[Dict], code has Optional[str]
Parameter type mismatch in Response.json(return=): documented as Any, code has Union[Dict, List]
Parameter type mismatch in WebSocket.waitForEvent(return=): documented as Dict, code has Any

# Geolocation
Method not documented: BrowserContext.resetGeolocation

# Pathlib
Parameter type mismatch in BrowserType.launch(executablePath=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launch(downloadsPath=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(downloadsPath=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(executablePath=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(userDataDir=): documented as str, code has Union[str, pathlib.Path]
Parameter type mismatch in Download.saveAs(path=): documented as str, code has Union[str, pathlib.Path]
Parameter type mismatch in ElementHandle.screenshot(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Frame.addScriptTag(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Frame.addStyleTag(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Page.addScriptTag(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Page.addStyleTag(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Page.screenshot(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Page.pdf(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]

# Pattern
Parameter type mismatch in BrowserContext.route(url=): documented as Union[str, RegExp, function(URL):boolean], code has Union[str, Pattern, Callable[[str], bool]]
Parameter type mismatch in BrowserContext.unroute(url=): documented as Union[str, RegExp, function(URL):boolean], code has Union[str, Pattern, Callable[[str], bool]]
Parameter type mismatch in Frame.waitForNavigation(url=): documented as Union[str, RegExp, Function, NoneType], code has Union[str, Pattern, Callable[[str], bool], NoneType]
Parameter type mismatch in Page.frame(url=): documented as Union[str, RegExp, Function, NoneType], code has Union[str, Pattern, Callable[[str], bool], NoneType]
Parameter type mismatch in Page.route(url=): documented as Union[str, RegExp, function(URL):boolean], code has Union[str, Pattern, Callable[[str], bool]]
Parameter type mismatch in Page.unroute(url=): documented as Union[str, RegExp, function(URL):boolean], code has Union[str, Pattern, Callable[[str], bool]]
Parameter type mismatch in Page.waitForNavigation(url=): documented as Union[str, RegExp, Function, NoneType], code has Union[str, Pattern, Callable[[str], bool], NoneType]
Parameter type mismatch in Page.waitForRequest(urlOrPredicate=): documented as Union[str, RegExp, Function], code has Union[str, Pattern, Callable[[str], bool], NoneType]
Parameter type mismatch in Page.waitForResponse(urlOrPredicate=): documented as Union[str, RegExp, function(Response):boolean], code has Union[str, Pattern, Callable[[str], bool], NoneType]

# Add init script
Parameter type mismatch in Page.addInitScript(script=): documented as Union[Callable, str, Dict], code has Optional[str]
Parameter type mismatch in BrowserContext.addInitScript(script=): documented as Union[Callable, str, Dict], code has Optional[str]
Parameter not documented: BrowserContext.addInitScript(path=)
Parameter not documented: Page.addInitScript(path=)

# File payload
Parameter type mismatch in ElementHandle.setInputFiles(files=): documented as Union[str, List[str], Dict, List[Dict]], code has Union[str, pathlib.Path, Dict, List[str], List[pathlib.Path], List[Dict]]
Parameter type mismatch in Page.setInputFiles(files=): documented as Union[str, List[str], Dict, List[Dict]], code has Union[str, Dict, List[str], List[Dict]]
Parameter type mismatch in FileChooser.setFiles(files=): documented as Union[str, List[str], Dict, List[Dict]], code has Union[str, Dict, List[str], List[Dict]]
Parameter type mismatch in Frame.setInputFiles(files=): documented as Union[str, List[str], Dict, List[Dict]], code has Union[str, pathlib.Path, Dict, List[str], List[pathlib.Path], List[Dict]]

# Select option
Parameter not implemented: ElementHandle.selectOption(values=)
Parameter not documented: ElementHandle.selectOption(element=)
Parameter not documented: Page.selectOption(element=)
Parameter not documented: Page.selectOption(value=)
Parameter not documented: Frame.selectOption(label=)
Parameter not implemented: Page.selectOption(values=)
Parameter not documented: ElementHandle.selectOption(label=)
Parameter not documented: Frame.selectOption(index=)
Parameter not documented: Page.selectOption(label=)
Parameter not documented: Page.selectOption(index=)
Parameter not documented: Frame.selectOption(element=)
Parameter not documented: Frame.selectOption(value=)
Parameter not documented: ElementHandle.selectOption(value=)
Parameter not implemented: Frame.selectOption(values=)
Parameter not documented: ElementHandle.selectOption(index=)

# Evaluation argument
Parameter type mismatch in ElementHandle.dispatchEvent(eventInit=): documented as Optional[EvaluationArgument], code has Optional[Dict]
Parameter type mismatch in Frame.dispatchEvent(eventInit=): documented as Optional[EvaluationArgument], code has Optional[Dict]
Parameter type mismatch in Page.dispatchEvent(eventInit=): documented as Optional[EvaluationArgument], code has Optional[Dict]

# Route
Parameter type mismatch in Page.unroute(handler=): documented as Optional[function(Route, Request)], code has Union[Callable[[Route], Any], Callable[[Route, Request], Any], NoneType]
Parameter type mismatch in Page.route(handler=): documented as function(Route, Request), code has Union[Callable[[Route], Any], Callable[[Route, Request], Any]]
Parameter type mismatch in BrowserContext.unroute(handler=): documented as Optional[function(Route, Request)], code has Union[Callable[[Route], Any], Callable[[Route, Request], Any], NoneType]
Parameter type mismatch in BrowserContext.route(handler=): documented as function(Route, Request), code has Union[Callable[[Route], Any], Callable[[Route, Request], Any]]

# Selectors
Parameter type mismatch in Selectors.register(script=): documented as Union[Callable, str, Dict], code has Optional[str]

# Device support
Parameter not documented: Browser.newContext(defaultBrowserType=)
Parameter not documented: Browser.newPage(defaultBrowserType=)

# Logger
Parameter not implemented: Browser.newContext(logger=)
Parameter not implemented: BrowserType.launch(logger=)
Parameter not implemented: BrowserType.launchPersistentContext(logger=)
Parameter not implemented: Browser.newPage(logger=)

# Deprecated
Parameter not implemented: Page.addInitScript(arg=)
Parameter not implemented: BrowserContext.addInitScript(arg=)
Method not implemented: BrowserType.connect
Parameter not implemented: Browser.newContext(videoSize=)
Parameter not implemented: BrowserType.launchPersistentContext(videosPath=)
Parameter not implemented: Browser.newPage(videosPath=)
Parameter not implemented: Browser.newPage(videoSize=)
Parameter not implemented: Browser.newContext(videosPath=)
Parameter not implemented: BrowserType.launchPersistentContext(videoSize=)

# OptionsOr
Parameter not implemented: Page.waitForEvent(optionsOrPredicate=)
Parameter not implemented: BrowserContext.waitForEvent(optionsOrPredicate=)
Parameter not implemented: WebSocket.waitForEvent(optionsOrPredicate=)

# Cookies are documented as Array<Object> in md, so not parsed.
Parameter type mismatch in Browser.newContext(storageState=): documented as Union[str, Dict, NoneType], code has Union[{"cookies": Optional[List[{"name": str, "value": str, "url": Optional[str], "domain": Optional[str], "path": Optional[str], "expires": Optional[int], "httpOnly": Optional[bool], "secure": Optional[bool], "sameSite": Optional[Literal['Strict', 'Lax', 'None']]}]], "origins": Optional[List[Dict]]}, str, pathlib.Path, NoneType]
Parameter type mismatch in Browser.newPage(storageState=): documented as Union[str, Dict, NoneType], code has Union[{"cookies": Optional[List[{"name": str, "value": str, "url": Optional[str], "domain": Optional[str], "path": Optional[str], "expires": Optional[int], "httpOnly": Optional[bool], "secure": Optional[bool], "sameSite": Optional[Literal['Strict', 'Lax', 'None']]}]], "origins": Optional[List[Dict]]}, str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserContext.storageState(return=): documented as {"cookies": List[Dict], "origins": List[Dict]}, code has {"cookies": Optional[List[{"name": str, "value": str, "url": Optional[str], "domain": Optional[str], "path": Optional[str], "expires": Optional[int], "httpOnly": Optional[bool], "secure": Optional[bool], "sameSite": Optional[Literal['Strict', 'Lax', 'None']]}]], "origins": Optional[List[Dict]]}
Parameter type mismatch in BrowserContext.addCookies(cookies=): documented as List[Dict], code has List[{"name": str, "value": str, "url": Optional[str], "domain": Optional[str], "path": Optional[str], "expires": Optional[int], "httpOnly": Optional[bool], "secure": Optional[bool], "sameSite": Optional[Literal['Strict', 'Lax', 'None']]}]
Parameter type mismatch in BrowserContext.cookies(return=): documented as List[Dict], code has List[{"name": str, "value": str, "url": Optional[str], "domain": Optional[str], "path": Optional[str], "expires": Optional[int], "httpOnly": Optional[bool], "secure": Optional[bool], "sameSite": Optional[Literal['Strict', 'Lax', 'None']]}]
Parameter type mismatch in Response.finished(return=): documented as Optional[Error], code has Optional[str]

# Path
Parameter type mismatch in BrowserContext.storageState(path=): documented as Optional[str], code has Union[str, pathlib.Path, NoneType]

# FloatPoint
Parameter type mismatch in Frame.click(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in ElementHandle.hover(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Frame.tap(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in ElementHandle.click(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Frame.hover(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in ElementHandle.tap(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Page.click(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Page.tap(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Page.dblclick(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in ElementHandle.dblclick(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Frame.dblclick(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]
Parameter type mismatch in Page.hover(position=): documented as Optional[{"x": float, "y": float}], code has Optional[typing.Tuple[float, float]]

# Credentials
Parameter type mismatch in Browser.newPage(httpCredentials=): documented as Optional[{"username": str, "password": str}], code has Optional[typing.Tuple[str, str]]
Parameter type mismatch in BrowserType.launchPersistentContext(httpCredentials=): documented as Optional[{"username": str, "password": str}], code has Optional[typing.Tuple[str, str]]
Parameter type mismatch in Browser.newContext(httpCredentials=): documented as Optional[{"username": str, "password": str}], code has Optional[typing.Tuple[str, str]]

# HAR & Video
Parameter type mismatch in Browser.newContext(recordHarPath=): documented as str, code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(recordVideoDir=): documented as str, code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Browser.newPage(recordVideoSize=): documented as Optional[{"width": int, "height": int}], code has Optional[typing.Tuple[int, int]]
Parameter type mismatch in BrowserType.launchPersistentContext(recordHarPath=): documented as str, code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Browser.newPage(recordVideoDir=): documented as str, code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in Browser.newContext(recordVideoSize=): documented as Optional[{"width": int, "height": int}], code has Optional[typing.Tuple[int, int]]
Parameter type mismatch in Browser.newContext(recordVideoDir=): documented as str, code has Union[str, pathlib.Path, NoneType]
Parameter type mismatch in BrowserType.launchPersistentContext(recordVideoSize=): documented as Optional[{"width": int, "height": int}], code has Optional[typing.Tuple[int, int]]
Parameter type mismatch in Browser.newPage(recordHarPath=): documented as str, code has Union[str, pathlib.Path, NoneType]
